/*
 * Woleet API
 *
 * Welcome to **Woleet API reference documentation**.<br> It is highly recommanded to read the chapters **[introducing Woleet API concepts](https://doc.woleet.io/reference)** before reading this documentation. 
 *
 * API version: 1.6.2
 * Contact: contact@woleet.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package woleetapi

type ReceiptVerificationStatus struct {
	// Proof receipt verification status code:<br> - VERIFIED: the proof receipt is verified<br> The receipt format is valid, the transaction is present in the Bitcoin blockchain and confirmed at least once, the receipt contains a valid Merkle proof linking its `targetHash` property to the transaction's `OP_RETURN` field.<br> The creation time and the number of confirmation of the block containing the transaction is returned in the `timestamp` and `confirmations` properties.<br> Any data whose SHA256 hash matches the proof receipt's `targetHash` is proven to exist at that time and has not been modified since.<br> - TX_NOT_FOUND: the receipt's `anchors` property does not include a valid Bitcoin transaction<br> - TX_NOT_CONFIRMED: the transaction is not yet confirmed by the blockchain (ie. not yet included in a block)<br> - INVALID_PROOF: the receipt's `proof` property is not a valid Merkle proof<br> - TX_MISMATCH_RECEIPT: the receipt's `merkleRoot` property does not match the transaction's `OP_RETURN` field<br> - INVALID_SIGNATURE: the receipt's `signature` property is not a valid signature 
	Code string `json:"code,omitempty"`
	// Proof receipt verification status text giving more insight about verification errors.
	Text string `json:"text,omitempty"`
	// Proven timestamp of the data (for a data anchor) or of the signature (for a signature anchor).<br> This is actually the time of the Bitcoin block into which the anchoring process occurred (in milliseconds since Unix epoch).<br> Any data whose SHA256 hash equals this proof receipt's target hash property is proven to exist at that time and has not been modified since. 
	Timestamp int64 `json:"timestamp,omitempty"`
	// Number of confirmations of the Bitcoin block into which the anchoring process occurred.
	Confirmations int32 `json:"confirmations,omitempty"`
	IdentityVerificationStatus IdentityVerificationStatus `json:"identityVerificationStatus,omitempty"`
}
