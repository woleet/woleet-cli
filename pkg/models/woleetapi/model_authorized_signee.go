/*
 * Woleet API
 *
 * Welcome to **Woleet API reference documentation**.<br> It is highly recommanded to read the chapters **[introducing Woleet API concepts](https://doc.woleet.io/reference)** before reading this documentation. 
 *
 * API version: 1.6.2
 * Contact: contact@woleet.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package woleetapi

type AuthorizedSignee struct {
	// The public key the authorized signee must use to sign.<br> **Currently only Bitcoin addresses are supported.**<br> If not set, the authorized signee can sign using any key. 
	PubKey string `json:"pubKey,omitempty"`
	// The type of device the authorized signee should use to sign:<br> - SERVER: Woleet.ID Server or equivalent - MOBILE: Woleet.ID Mobile or equivalent - NANO: Ledger Nano S or equivalent If set, the signature web application could only offer the corresponding signature mode. 
	Device string `json:"device,omitempty"`
	// The email of the authorized signee.<br> If set, an email is sent by the platform to the authorized signee, and `commonName` must also be set.<br> If set, `pubKey` is not mandatory, to allow the authorized signee to sign using any key. 
	Email string `json:"email,omitempty"`
	// The country calling code of the authorized signee. 
	CountryCallingCode string `json:"countryCallingCode,omitempty"`
	// The phone of the authorized signee (not including the country calling code).<br> This phone must be able to receive a One Time Password by SMS. 
	Phone string `json:"phone,omitempty"`
	// `true` if the signee must provide a One Time Password to sign.<br> If `true`, `phone` must be set, since the One Time Password is sent by SMS. 
	RequiresOTP *bool `json:"requiresOTP,omitempty"`
	// The full name of the authorized signee. 
	CommonName string `json:"commonName,omitempty"`
	// Web hook to use to verify the signee's identity.<br> If set, it is used to verify signee's identity at signature registration time. 
	IdentityURL string `json:"identityURL,omitempty"`
}
